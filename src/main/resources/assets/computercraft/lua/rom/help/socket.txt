The functions included in the socket API are as follows:
host, port = socket.lookup(uri) --Returns the values required for socket.open
sock = socket.open(host, port, useSSL) --Returns a socket. Note that the host must be an IP address, which can be found with socket.lookup()
socket.checkHost(host) --Basically http.checkURL, but with URIs

They are also available in an async form.
Simply append "Async" to the command and wait for the "async_socket" event
The async variations will return an id, which can be compared to the id of the async event'

id = socket.someMethodAsync(...)
"async", id, type, ok, ... = os.pullEvent("async_socket")

Object "sock" is as follow:
text = sock.read(n) --Reads and removes n bytes from buffer
sock.write(text) --Writes text to the server
sock.close() --Closes the socket
isClosed = sock.isClosed() --Checks the state of the socket
certs = sock.getCertificates() --Get a table with the names of certificates.
text = sock.readLine() --Reads a line, if possible
text = sock.readAll() --Reads whatever it can

Openning a socket with openAsync will make all methods of the sock object async.
The method names are not changed.

Note that non-async versions of methods will error if the ok code returned by the async version is false
