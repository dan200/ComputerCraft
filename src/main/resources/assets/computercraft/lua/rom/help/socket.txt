The functions included in the socket API are as follows:
host, port = socket.lookup(uri) --Returns the values required for socket.open
sock = socket.open(host, port, useSSL) --Returns a socket. Note that the host must be an IP address, which can be found with socket.lookup()
socket.checkHost(host) --Basically http.checkURL, but with URIs

They are also available in an async form.
Simply append "Async" to the command and wait for the "async" event
The async variations will return an id, which can be compared to the id of the async event
id = socket.someMethodAsync(...)
"async", id, ok, ... = os.pullEvent("async")

Object "sock" is as follow:
length = sock.length() --Returns length of unread buffer
text = sock.read(n) --Reads and removes n bytes from buffer
sock.write(text) --Writes text to the server
sock.close() --Closes the socket
isClosed = sock.isClosed() --Checks the state of the socket
certs = sock.getCertificate() --Get a table with the names of certificates. If the socket is not SSL, this will return false

Openning a socket with openAsync will make all methods of the sock object async.
The method names are not changed.

Note that non-async versions of methods will error if the ok code returned by the async version is false
